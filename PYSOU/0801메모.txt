<벡터와 스칼라>
벡터는 순서쌍으로 표현됨.

벡터는 속력과 속도 두 가지의 비교로 설명할 수 있음. 둘은 같은 개념같지만,
속력은 시간당 이동한 거리의 값을 갖고 있지만, 방향은 갖고 있지 않음. (스칼라)
속도는 시간당 이동한 거리의 값과 방향 둘 다 갖고있음. 이렇게 값과 방향이 둘 다 있을 경우, 힘을 갖고 있다고 표현함. (벡터)

인공지능에서는 데이터를 스칼라가 아닌, 벡터로 보아야 함.

백터에서도 차원의 개념이 존재하며, 배열 안의 요소값의 갯수에 따라 차원이 몇차원인지 결정됨.
ex) [5] -> 1차원, [1, 6] -> 2차원, [6, 8, 9] -> 3차원

벡터는 순서쌍(좌표)의 형식으로 표현함. (행좌표, 열좌표 모두 가능!)

0차원은 값만 있을뿐, 방향이 없기 때문에 벡터가 아닌 스칼라임.

두 개의 벡터를 활용해 새로운 백터를 만들어 낼 수 있음. 2차원 백터 두 개가 있다고 가정할 경우, x축 값들의 합과 y축 값들의 합으로 새로운 백터를 만들 수 있으며, 완성된 새로운 벡터를 좌표에서 보았을 때엔 평행사변형의 형태 혹은 삼각형의 형태로 구해질 수 있음.

벡터는 방향과 크기만 있을뿐, 출발지는 특정 지점으로 지정되지 않았음. 따라서 출발지가 달라도 방향과 크기가 같다면, 같은 벡터로 간주됨!

<선형 결합>
선형 독립 : 어떤 벡터도 나머지를 이용해 만들 수 없으면 독립임!
선형 종속 : 두 백터를 아무리 더하거나 빼도 공간을 채울 수 없으면 종속임!


결과적으로 벡터는 여러 요인의 영향력을 하나의 방향성으로 종합해 표현하는 것.

예시)
(원인변수)
1) mpg: 연비
2) cylinders: 실린더 개수
3) displacement: 배기량
4) horsepower: 마력
5) weight: 무게
6) acceleration: 엔진이 초당 얻을 수 있는 가속력
7) model year: 출시 년도
8) origin: 제조 장소(1: 미국 USA, 2: 유럽 EU, 3: 일본 JPN)
9) car name: 자동차 이름

(결과변수)
18.0   8   307.0      130.0      3504.      12.0   70  1 "chevrolet chevelle malibu"
15.0   8   350.0      165.0      3693.      11.5   70  1 "buick skylark 320"
18.0   8   318.0      150.0      3436.      11.0   70  1 "plymouth satellite"
16.0   8   304.0      150.0      3433.      12.0   70  1 "amc rebel sst"
17.0   8   302.0      140.0      3449.      10.5   70  1 "ford torino"

원인변수를 차원축소해서 백터화 시켜서 단순한 좌표값만으로 모든 데이터들을 표현 및 작업 가능함!



<내적연산>
내적(Dotproduct)은 두 벡터의 방향 및 크기 유사도를 동시에 측정하는 연산임.
그래프로 볼 경우엔 길이와 기울기(각도)의 유사성을 측정하는 것이라 볼 수 있음.

두 백터의 내적을 구하는 방법은 두가지로, 다음과 같음 : 
1. 두 백터의 절댓값을 곱한 것에 코사인 세타를 곱한 값으로 구함.
2. 한 백터에서 다른 백터로의 직교로 내려가면 구해지는 값으로도 구할 수 있음.(성분기반곱)

numpy의 .dot 매서드는 2의 방식으로 내적을 연산함.

해당 연산으로 구한 값은 실수 한개이기 때문에 스칼라임.

백터화 시킨 데이터로 할 수 있는 내적은 예측이나 분류 모델을 만드는 데 사용할 수 있음.
















